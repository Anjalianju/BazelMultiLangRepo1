dist: xenial
install: true
language: java

jdk:
  - openjdk8

env:
  global:
    - BAZEL_VERSION="0.27.0"
    - GENERIC_PROJECTS_DIR="$TRAVIS_BUILD_DIR/generic"
    - JAVA_PROJECTS_DIR="$TRAVIS_BUILD_DIR/java"

before_install:
  - sudo apt-get install pkg-config zip g++ zlib1g-dev unzip python3
  - wget -O install.sh "https://github.com/bazelbuild/bazel/releases/download/$BAZEL_VERSION/bazel-$BAZEL_VERSION-installer-linux-x86_64.sh"
  - chmod +x install.sh
  - ./install.sh --user
  - rm -f install.sh

script:
  # Execute projects using generic functionality
  - cd "$GENERIC_PROJECTS_DIR/rules/empty"; bazel build //:nothing
  - cd "$GENERIC_PROJECTS_DIR/rules/file-generator"; bazel build //:gen
  
  # Execute Java-based projects
  - cd "$JAVA_PROJECTS_DIR/single-package"; bazel build //:hello-world
  - cd "$JAVA_PROJECTS_DIR/multi-package"; bazel build //:hello-world
  - cd "$JAVA_PROJECTS_DIR/multi-module"; bazel build //app:app
  - cd "$JAVA_PROJECTS_DIR/external-deps"; bazel build //:app
  - cd "$JAVA_PROJECTS_DIR/compile-only-dep"; bazel build //:lib
  - cd "$JAVA_PROJECTS_DIR/junit4-test"; bazel test //:all-tests --test_output=all
  - cd "$JAVA_PROJECTS_DIR/javadoc"; bazel build //:app-doc
  - cd "$JAVA_PROJECTS_DIR/versioned-java-library"; bazel build //:messenger
  - cd "$JAVA_PROJECTS_DIR/spring-boot"; bazel build //:spring-boot-hello-world