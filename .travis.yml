dist: xenial
install: true
language: java

jdk:
  - openjdk8

env:
  global:
    - BAZEL_VERSION="0.27.0"
    - GENERIC_PROJECTS_DIR="$TRAVIS_BUILD_DIR/generic"
    - JAVA_PROJECTS_DIR="$TRAVIS_BUILD_DIR/java"
  matrix:
    # Execute projects using generic functionality
    - SCRIPT="cd $GENERIC_PROJECTS_DIR/tar; bazel build //:my-tar"
    - SCRIPT="cd $GENERIC_PROJECTS_DIR/rules/print-message; bazel build //:nothing"
    - SCRIPT="cd $GENERIC_PROJECTS_DIR/rules/write-file; bazel build //:gen"
    
    # Execute Java-based projects
    - SCRIPT="cd $JAVA_PROJECTS_DIR/single-package; bazel build //:hello-world"
    - SCRIPT="cd $JAVA_PROJECTS_DIR/multi-package; bazel build //:hello-world"
    - SCRIPT="cd $JAVA_PROJECTS_DIR/multi-module; bazel build //app:app"
    - SCRIPT="cd $JAVA_PROJECTS_DIR/external-deps; bazel build //:app"
    - SCRIPT="cd $JAVA_PROJECTS_DIR/compile-only-dep; bazel build //:lib"
    - SCRIPT="cd $JAVA_PROJECTS_DIR/pom-generation; bazel build //:pom"
    - SCRIPT="cd $JAVA_PROJECTS_DIR/junit4-test; bazel test //:all-tests --test_output=all"
    - SCRIPT="cd $JAVA_PROJECTS_DIR/junit5-test; bazel test //:junit5-test --test_output=all"
    - SCRIPT="cd $JAVA_PROJECTS_DIR/jacoco-test-coverage; bazel test //:all-tests --test_output=all"
    - SCRIPT="cd $JAVA_PROJECTS_DIR/javadoc; bazel build //:app-doc"
    - SCRIPT="cd $JAVA_PROJECTS_DIR/versioned-java-library; bazel build //:messenger"
    - SCRIPT="cd $JAVA_PROJECTS_DIR/spring-boot; bazel build //:spring-boot-hello-world"
    - SCRIPT="cd $JAVA_PROJECTS_DIR/spring-boot-in-docker-image; bazel build //:app-image"
    - SCRIPT="cd $JAVA_PROJECTS_DIR/web-app-in-docker-image; bazel build //:docker-image"

before_install:
  - sudo apt-get install pkg-config zip g++ zlib1g-dev unzip python3
  - wget -O install.sh "https://github.com/bazelbuild/bazel/releases/download/$BAZEL_VERSION/bazel-$BAZEL_VERSION-installer-linux-x86_64.sh"
  - chmod +x install.sh
  - ./install.sh --user
  - rm -f install.sh

script: ${SCRIPT}